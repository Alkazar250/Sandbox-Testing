// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 10.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestProject1.ServiceReference1;
    
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// LogIn - Используйте "LogInParams" для передачи параметров в этот метод.
        /// </summary>
        public void LogIn()
        {
            #region Variable Declarations
            WinListItem uISANDBOXexeListItem = this.UISanbox_SetupWindow.UIFolderViewWindow.UISANDBOXexeListItem;
            WinEdit uITxtNameEdit = this.UIAuthenticationWindow.UITxtNameWindow.UITxtNameEdit;
            WinEdit uITxtPassEdit = this.UIAuthenticationWindow.UITxtPassWindow.UITxtPassEdit;
            WinButton uIConnectButton = this.UIAuthenticationWindow.UIConnectWindow.UIConnectButton;
            WinTitleBar uISandboxTitleBar = this.UISandboxWindow.UISandboxTitleBar;
            WinStatusBar uIStatusStrip1StatusBar = this.UISandboxWindow.UIStatusStrip1Window.UIStatusStrip1StatusBar;
            WinText uITest1Text = this.UISandboxWindow.UIStatusStrip1StatusBar.UITest1Text;
            
            #endregion

            // Двойной щелчок "SANDBOX.exe" элемент списка
            Mouse.DoubleClick(uISANDBOXexeListItem, new Point(67, 24));

            // Тип "Test1" в "txtName" надпись
            uITxtNameEdit.Text = this.LogInParams.UITxtNameEditText;

            // Щелчок "txtPass" надпись
            Mouse.Click(uITxtPassEdit, new Point(38, 8));

            // Тип "********" в "txtPass" надпись
            Keyboard.SendKeys(uITxtPassEdit, this.LogInParams.UITxtPassEditSendKeys, true);

            // Щелчок "Connect" кнопка
            Mouse.Click(uIConnectButton, new Point(23, 7));

            // Щелчок "Sandbox" название
            Mouse.Click(uISandboxTitleBar, new Point(251, 12));

            // Щелчок "statusStrip1" строка состояния
            Mouse.Click(uIStatusStrip1StatusBar, new Point(106, 11));

            // Щелчок "Test1" надпись
            Mouse.Click(uITest1Text, new Point(15, 10));
        }
        
        /// <summary>
        /// AddAuthor - Используйте "AddAuthorParams" для передачи параметров в этот метод.
        /// </summary>
        public void AddAuthor()
        {
            #region Variable Declarations
            WinButton uIAuthorManagementButton = this.UISandboxWindow.UIToolStrip1ToolBar.UIAuthorManagementButton;
            WinEdit uITxtAddAuthorEdit = this.UIAuthorsWindow.UITxtAddAuthorWindow.UITxtAddAuthorEdit;
            WinButton uIAddButton = this.UIAuthorsWindow.UIAddWindow.UIAddButton;
            WinButton uIЗакрытьButton = this.UIAuthorsWindow.UIAuthorsTitleBar.UIЗакрытьButton;
            #endregion

            // Щелчок "Author Management" кнопка
            Mouse.Click(uIAuthorManagementButton, new Point(14, 11));

            // Щелчок "Author Management" кнопка
            Mouse.Click(uIAuthorManagementButton, new Point(14, 11));

            // Тип "Stanislav Lem" в "txtAddAuthor" надпись
            uITxtAddAuthorEdit.Text = this.AddAuthorParams.UITxtAddAuthorEditText;

            // Щелчок "Add" кнопка
            Mouse.Click(uIAddButton, new Point(19, 10));

            // Щелчок "Закрыть" кнопка
            Mouse.Click(uIЗакрытьButton, new Point(8, 9));

            Service1SoapClient sc = new Service1SoapClient();
            Author a = sc.GetAuthor(this.AddAuthorParams.UITxtAddAuthorEditText);
            Assert.AreEqual(this.AddAuthorParams.UITxtAddAuthorEditText, a.Name);
        }
        
        /// <summary>
        /// AddBook - Используйте "AddBookParams" для передачи параметров в этот метод.
        /// </summary>
        public void AddBook()
        {
            #region Variable Declarations
            WinButton uIAddNewBookButton = this.UISandboxWindow.UIToolStrip1ToolBar.UIAddNewBookButton;
            WinEdit uITxtNameEdit = this.UIAddnewbookWindow.UITxtNameWindow.UITxtNameEdit;
            WinComboBox uICmbAuthorComboBox = this.UIAddnewbookWindow.UICmbAuthorWindow.UICmbAuthorComboBox;
            WinEdit uITxtYearEdit = this.UIAddnewbookWindow.UITxtYearWindow.UITxtYearEdit;
            WinComboBox uICmbTypeComboBox = this.UIAddnewbookWindow.UICmbTypeWindow.UICmbTypeComboBox;
            WinButton uIAddBookButton = this.UIAddnewbookWindow.UIAddBookWindow.UIAddBookButton;
            WinCell uICiberiadaCell = this.UISandboxWindow.UIDataGridView1Window.UIDataGridViewTable.UIСтрока0Row.UICiberiadaCell;
            #endregion

            // Щелчок "Add New Book" кнопка
            Mouse.Click(uIAddNewBookButton, new Point(14, 11));

            // Тип "Ciberiada" в "txtName" надпись
            uITxtNameEdit.Text = this.AddBookParams.UITxtNameEditText;

            // Выберите "Stanislaw Lem" в "cmbAuthor" поле со списком
            uICmbAuthorComboBox.SelectedItem = this.AddBookParams.UICmbAuthorComboBoxSelectedItem;

            // Тип "1978" в "txtYear" надпись
            uITxtYearEdit.Text = this.AddBookParams.UITxtYearEditText;

            // Выберите "Fantasy" в "cmbType" поле со списком
            uICmbTypeComboBox.SelectedItem = this.AddBookParams.UICmbTypeComboBoxSelectedItem;

            // Щелчок "Add Book" кнопка
            Mouse.Click(uIAddBookButton, new Point(98, 18));

            // Щелчок "Ciberiada" ячейка
            Mouse.Click(uICiberiadaCell, new Point(46, 13));
        }
        
        /// <summary>
        /// AddUser - Используйте "AddUserParams" для передачи параметров в этот метод.
        /// </summary>
        public void AddUser()
        {
            #region Variable Declarations
            WinButton uIUsersManagementButton = this.UISandboxWindow.UIToolStrip1ToolBar.UIUsersManagementButton;
            WinButton uICreateUserButton = this.UIUsersWindow.UICreateUserWindow.UICreateUserButton;
            WinEdit uITxtUserNameEdit = this.UIAddUserWindow.UITxtUserNameWindow.UITxtUserNameEdit;
            WinEdit uITextUserPassEdit = this.UIAddUserWindow.UITextUserPassWindow.UITextUserPassEdit;
            WinEdit uITextUserMailEdit = this.UIAddUserWindow.UITextUserMailWindow.UITextUserMailEdit;
            WinButton uICreateUserButton1 = this.UIAddUserWindow.UICreateUserWindow.UICreateUserButton;
            WinCell uIReader2Cell = this.UIUsersWindow.UIDataGridView1Window.UIDataGridViewTable.UIСтрока4Row.UIReader2Cell;
            #endregion

            // Щелчок "Users Management" кнопка
            Mouse.Click(uIUsersManagementButton, new Point(13, 12));

            // Щелчок "Create User" кнопка
            Mouse.Click(uICreateUserButton, new Point(26, 17));

            // Тип "Reader2" в "txtUserName" надпись
            uITxtUserNameEdit.Text = this.AddUserParams.UITxtUserNameEditText;

            // Щелчок "textUserPass" надпись
            Mouse.Click(uITextUserPassEdit, new Point(123, 10));

            // Тип "********" в "textUserPass" надпись
            Keyboard.SendKeys(uITextUserPassEdit, this.AddUserParams.UITextUserPassEditSendKeys, true);

            // Тип "test3@mail.ru" в "textUserMail" надпись
            uITextUserMailEdit.Text = this.AddUserParams.UITextUserMailEditText;

            // Щелчок "Create User" кнопка
            Mouse.Click(uICreateUserButton1, new Point(59, 9));

            // Щелчок "Reader2" ячейка
            Mouse.Click(uIReader2Cell, new Point(25, 11));
        }
        
        #region Properties
        public virtual LogInParams LogInParams
        {
            get
            {
                if ((this.mLogInParams == null))
                {
                    this.mLogInParams = new LogInParams();
                }
                return this.mLogInParams;
            }
        }
        
        public virtual AddAuthorParams AddAuthorParams
        {
            get
            {
                if ((this.mAddAuthorParams == null))
                {
                    this.mAddAuthorParams = new AddAuthorParams();
                }
                return this.mAddAuthorParams;
            }
        }
        
        public virtual AddBookParams AddBookParams
        {
            get
            {
                if ((this.mAddBookParams == null))
                {
                    this.mAddBookParams = new AddBookParams();
                }
                return this.mAddBookParams;
            }
        }
        
        public virtual AddUserParams AddUserParams
        {
            get
            {
                if ((this.mAddUserParams == null))
                {
                    this.mAddUserParams = new AddUserParams();
                }
                return this.mAddUserParams;
            }
        }
        
        public UIAuthenticationWindow UIAuthenticationWindow
        {
            get
            {
                if ((this.mUIAuthenticationWindow == null))
                {
                    this.mUIAuthenticationWindow = new UIAuthenticationWindow();
                }
                return this.mUIAuthenticationWindow;
            }
        }
        
        public UISandboxWindow UISandboxWindow
        {
            get
            {
                if ((this.mUISandboxWindow == null))
                {
                    this.mUISandboxWindow = new UISandboxWindow();
                }
                return this.mUISandboxWindow;
            }
        }
        
        public UIAuthorsWindow UIAuthorsWindow
        {
            get
            {
                if ((this.mUIAuthorsWindow == null))
                {
                    this.mUIAuthorsWindow = new UIAuthorsWindow();
                }
                return this.mUIAuthorsWindow;
            }
        }
        
        public UIAddnewbookWindow UIAddnewbookWindow
        {
            get
            {
                if ((this.mUIAddnewbookWindow == null))
                {
                    this.mUIAddnewbookWindow = new UIAddnewbookWindow();
                }
                return this.mUIAddnewbookWindow;
            }
        }
        
        public UIUsersWindow UIUsersWindow
        {
            get
            {
                if ((this.mUIUsersWindow == null))
                {
                    this.mUIUsersWindow = new UIUsersWindow();
                }
                return this.mUIUsersWindow;
            }
        }
        
        public UIAddUserWindow UIAddUserWindow
        {
            get
            {
                if ((this.mUIAddUserWindow == null))
                {
                    this.mUIAddUserWindow = new UIAddUserWindow();
                }
                return this.mUIAddUserWindow;
            }
        }
        
        public UIProgramManagerWindow UIProgramManagerWindow
        {
            get
            {
                if ((this.mUIProgramManagerWindow == null))
                {
                    this.mUIProgramManagerWindow = new UIProgramManagerWindow();
                }
                return this.mUIProgramManagerWindow;
            }
        }
        
        public UISanbox_SetupWindow UISanbox_SetupWindow
        {
            get
            {
                if ((this.mUISanbox_SetupWindow == null))
                {
                    this.mUISanbox_SetupWindow = new UISanbox_SetupWindow();
                }
                return this.mUISanbox_SetupWindow;
            }
        }
        #endregion
        
        #region Fields
        private LogInParams mLogInParams;
        
        private AddAuthorParams mAddAuthorParams;
        
        private AddBookParams mAddBookParams;
        
        private AddUserParams mAddUserParams;
        
        private UIAuthenticationWindow mUIAuthenticationWindow;
        
        private UISandboxWindow mUISandboxWindow;
        
        private UIAuthorsWindow mUIAuthorsWindow;
        
        private UIAddnewbookWindow mUIAddnewbookWindow;
        
        private UIUsersWindow mUIUsersWindow;
        
        private UIAddUserWindow mUIAddUserWindow;
        
        private UIProgramManagerWindow mUIProgramManagerWindow;
        
        private UISanbox_SetupWindow mUISanbox_SetupWindow;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "LogIn"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class LogInParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "Test1" в "txtName" надпись
        /// </summary>
        public string UITxtNameEditText = "Test1";
        
        /// <summary>
        /// Тип "********" в "txtPass" надпись
        /// </summary>
        public string UITxtPassEditSendKeys = "K2gHpANDeOOtYhGGA0aZ04zjQIbIYSLh";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AddAuthor"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class AddAuthorParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "Stanislaw Lem" в "txtAddAuthor" надпись
        /// </summary>
        public string UITxtAddAuthorEditText = "Stanislav Lem";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AddBook"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class AddBookParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "Ciberiada" в "txtName" надпись
        /// </summary>
        public string UITxtNameEditText = "Ciberiada";
        
        /// <summary>
        /// Выберите "Stanislaw Lem" в "cmbAuthor" поле со списком
        /// </summary>
        public string UICmbAuthorComboBoxSelectedItem = "Stanislaw Lem";
        
        /// <summary>
        /// Тип "1978" в "txtYear" надпись
        /// </summary>
        public string UITxtYearEditText = "1978";
        
        /// <summary>
        /// Выберите "Fantasy" в "cmbType" поле со списком
        /// </summary>
        public string UICmbTypeComboBoxSelectedItem = "Fantasy";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AddUser"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class AddUserParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "Reader2" в "txtUserName" надпись
        /// </summary>
        public string UITxtUserNameEditText = "Reader2";
        
        /// <summary>
        /// Тип "********" в "textUserPass" надпись
        /// </summary>
        public string UITextUserPassEditSendKeys = "aqLC4i2zMSaSScBoIWd7PkeyqDV36fjj";
        
        /// <summary>
        /// Тип "test3@mail.ru" в "textUserMail" надпись
        /// </summary>
        public string UITextUserMailEditText = "test3@mail.ru";
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIAuthenticationWindow : WinWindow
    {
        
        public UIAuthenticationWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Authentication";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Authentication");
            #endregion
        }
        
        #region Properties
        public UITxtNameWindow UITxtNameWindow
        {
            get
            {
                if ((this.mUITxtNameWindow == null))
                {
                    this.mUITxtNameWindow = new UITxtNameWindow(this);
                }
                return this.mUITxtNameWindow;
            }
        }
        
        public UITxtPassWindow UITxtPassWindow
        {
            get
            {
                if ((this.mUITxtPassWindow == null))
                {
                    this.mUITxtPassWindow = new UITxtPassWindow(this);
                }
                return this.mUITxtPassWindow;
            }
        }
        
        public UIConnectWindow UIConnectWindow
        {
            get
            {
                if ((this.mUIConnectWindow == null))
                {
                    this.mUIConnectWindow = new UIConnectWindow(this);
                }
                return this.mUIConnectWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITxtNameWindow mUITxtNameWindow;
        
        private UITxtPassWindow mUITxtPassWindow;
        
        private UIConnectWindow mUIConnectWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITxtNameWindow : WinWindow
    {
        
        public UITxtNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtName";
            this.WindowTitles.Add("Authentication");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtNameEdit
        {
            get
            {
                if ((this.mUITxtNameEdit == null))
                {
                    this.mUITxtNameEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITxtNameEdit.WindowTitles.Add("Authentication");
                    #endregion
                }
                return this.mUITxtNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtNameEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITxtPassWindow : WinWindow
    {
        
        public UITxtPassWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPass";
            this.WindowTitles.Add("Authentication");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtPassEdit
        {
            get
            {
                if ((this.mUITxtPassEdit == null))
                {
                    this.mUITxtPassEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITxtPassEdit.WindowTitles.Add("Authentication");
                    #endregion
                }
                return this.mUITxtPassEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtPassEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIConnectWindow : WinWindow
    {
        
        public UIConnectWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Authentication");
            #endregion
        }
        
        #region Properties
        public WinButton UIConnectButton
        {
            get
            {
                if ((this.mUIConnectButton == null))
                {
                    this.mUIConnectButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIConnectButton.SearchProperties[WinButton.PropertyNames.Name] = "Connect";
                    this.mUIConnectButton.WindowTitles.Add("Authentication");
                    #endregion
                }
                return this.mUIConnectButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIConnectButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UISandboxWindow : WinWindow
    {
        
        public UISandboxWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Sandbox";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Sandbox");
            #endregion
        }
        
        #region Properties
        public WinTitleBar UISandboxTitleBar
        {
            get
            {
                if ((this.mUISandboxTitleBar == null))
                {
                    this.mUISandboxTitleBar = new WinTitleBar(this);
                    #region Условия поиска
                    this.mUISandboxTitleBar.WindowTitles.Add("Sandbox");
                    #endregion
                }
                return this.mUISandboxTitleBar;
            }
        }
        
        public UIStatusStrip1StatusBar UIStatusStrip1StatusBar
        {
            get
            {
                if ((this.mUIStatusStrip1StatusBar == null))
                {
                    this.mUIStatusStrip1StatusBar = new UIStatusStrip1StatusBar(this);
                }
                return this.mUIStatusStrip1StatusBar;
            }
        }
        
        public UIToolStrip1ToolBar UIToolStrip1ToolBar
        {
            get
            {
                if ((this.mUIToolStrip1ToolBar == null))
                {
                    this.mUIToolStrip1ToolBar = new UIToolStrip1ToolBar(this);
                }
                return this.mUIToolStrip1ToolBar;
            }
        }
        
        public UIDataGridView1Window UIDataGridView1Window
        {
            get
            {
                if ((this.mUIDataGridView1Window == null))
                {
                    this.mUIDataGridView1Window = new UIDataGridView1Window(this);
                }
                return this.mUIDataGridView1Window;
            }
        }
        
        public UIStatusStrip1Window UIStatusStrip1Window
        {
            get
            {
                if ((this.mUIStatusStrip1Window == null))
                {
                    this.mUIStatusStrip1Window = new UIStatusStrip1Window(this);
                }
                return this.mUIStatusStrip1Window;
            }
        }
        #endregion
        
        #region Fields
        private WinTitleBar mUISandboxTitleBar;
        
        private UIStatusStrip1StatusBar mUIStatusStrip1StatusBar;
        
        private UIToolStrip1ToolBar mUIToolStrip1ToolBar;
        
        private UIDataGridView1Window mUIDataGridView1Window;
        
        private UIStatusStrip1Window mUIStatusStrip1Window;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIStatusStrip1StatusBar : WinStatusBar
    {
        
        public UIStatusStrip1StatusBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinStatusBar.PropertyNames.Name] = "statusStrip1";
            this.WindowTitles.Add("Sandbox");
            #endregion
        }
        
        #region Properties
        public WinText UITest1Text
        {
            get
            {
                if ((this.mUITest1Text == null))
                {
                    this.mUITest1Text = new WinText(this);
                    #region Условия поиска
                    this.mUITest1Text.SearchProperties[WinText.PropertyNames.Name] = "Test1";
                    this.mUITest1Text.WindowTitles.Add("Sandbox");
                    #endregion
                }
                return this.mUITest1Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUITest1Text;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIToolStrip1ToolBar : WinToolBar
    {
        
        public UIToolStrip1ToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "toolStrip1";
            this.WindowTitles.Add("Sandbox");
            #endregion
        }
        
        #region Properties
        public WinButton UIAuthorManagementButton
        {
            get
            {
                if ((this.mUIAuthorManagementButton == null))
                {
                    this.mUIAuthorManagementButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIAuthorManagementButton.SearchProperties[WinButton.PropertyNames.Name] = "Author Management";
                    this.mUIAuthorManagementButton.WindowTitles.Add("Sandbox");
                    #endregion
                }
                return this.mUIAuthorManagementButton;
            }
        }
        
        public WinButton UIAddNewBookButton
        {
            get
            {
                if ((this.mUIAddNewBookButton == null))
                {
                    this.mUIAddNewBookButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIAddNewBookButton.SearchProperties[WinButton.PropertyNames.Name] = "Add New Book";
                    this.mUIAddNewBookButton.WindowTitles.Add("Sandbox");
                    #endregion
                }
                return this.mUIAddNewBookButton;
            }
        }
        
        public WinButton UIUsersManagementButton
        {
            get
            {
                if ((this.mUIUsersManagementButton == null))
                {
                    this.mUIUsersManagementButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIUsersManagementButton.SearchProperties[WinButton.PropertyNames.Name] = "Users Management";
                    this.mUIUsersManagementButton.WindowTitles.Add("Sandbox");
                    #endregion
                }
                return this.mUIUsersManagementButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAuthorManagementButton;
        
        private WinButton mUIAddNewBookButton;
        
        private WinButton mUIUsersManagementButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIDataGridView1Window : WinWindow
    {
        
        public UIDataGridView1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dataGridView1";
            this.WindowTitles.Add("Sandbox");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIDataGridViewTable : WinTable
    {
        
        public UIDataGridViewTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("Sandbox");
            #endregion
        }
        
        #region Properties
        public UIСтрока0Row UIСтрока0Row
        {
            get
            {
                if ((this.mUIСтрока0Row == null))
                {
                    this.mUIСтрока0Row = new UIСтрока0Row(this);
                }
                return this.mUIСтрока0Row;
            }
        }
        #endregion
        
        #region Fields
        private UIСтрока0Row mUIСтрока0Row;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIСтрока0Row : WinRow
    {
        
        public UIСтрока0Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinRow.PropertyNames.Value] = "Ciberiada;True;Stanislaw Lem;1978;Fantasy;1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Sandbox");
            #endregion
        }
        
        #region Properties
        public WinCell UICiberiadaCell
        {
            get
            {
                if ((this.mUICiberiadaCell == null))
                {
                    this.mUICiberiadaCell = new WinCell(this);
                    #region Условия поиска
                    this.mUICiberiadaCell.SearchProperties[WinCell.PropertyNames.Value] = "Ciberiada";
                    this.mUICiberiadaCell.WindowTitles.Add("Sandbox");
                    #endregion
                }
                return this.mUICiberiadaCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUICiberiadaCell;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIStatusStrip1Window : WinWindow
    {
        
        public UIStatusStrip1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "statusStrip1";
            this.WindowTitles.Add("Sandbox");
            #endregion
        }
        
        #region Properties
        public WinStatusBar UIStatusStrip1StatusBar
        {
            get
            {
                if ((this.mUIStatusStrip1StatusBar == null))
                {
                    this.mUIStatusStrip1StatusBar = new WinStatusBar(this);
                    #region Условия поиска
                    this.mUIStatusStrip1StatusBar.SearchProperties[WinStatusBar.PropertyNames.Name] = "statusStrip1";
                    this.mUIStatusStrip1StatusBar.WindowTitles.Add("Sandbox");
                    #endregion
                }
                return this.mUIStatusStrip1StatusBar;
            }
        }
        #endregion
        
        #region Fields
        private WinStatusBar mUIStatusStrip1StatusBar;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIAuthorsWindow : WinWindow
    {
        
        public UIAuthorsWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Authors";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Authors");
            #endregion
        }
        
        #region Properties
        public UITxtAddAuthorWindow UITxtAddAuthorWindow
        {
            get
            {
                if ((this.mUITxtAddAuthorWindow == null))
                {
                    this.mUITxtAddAuthorWindow = new UITxtAddAuthorWindow(this);
                }
                return this.mUITxtAddAuthorWindow;
            }
        }
        
        public UIAddWindow UIAddWindow
        {
            get
            {
                if ((this.mUIAddWindow == null))
                {
                    this.mUIAddWindow = new UIAddWindow(this);
                }
                return this.mUIAddWindow;
            }
        }
        
        public UIDataGridView1Window1 UIDataGridView1Window
        {
            get
            {
                if ((this.mUIDataGridView1Window == null))
                {
                    this.mUIDataGridView1Window = new UIDataGridView1Window1(this);
                }
                return this.mUIDataGridView1Window;
            }
        }
        
        public UIAuthorsTitleBar UIAuthorsTitleBar
        {
            get
            {
                if ((this.mUIAuthorsTitleBar == null))
                {
                    this.mUIAuthorsTitleBar = new UIAuthorsTitleBar(this);
                }
                return this.mUIAuthorsTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UITxtAddAuthorWindow mUITxtAddAuthorWindow;
        
        private UIAddWindow mUIAddWindow;
        
        private UIDataGridView1Window1 mUIDataGridView1Window;
        
        private UIAuthorsTitleBar mUIAuthorsTitleBar;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITxtAddAuthorWindow : WinWindow
    {
        
        public UITxtAddAuthorWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtAddAuthor";
            this.WindowTitles.Add("Authors");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtAddAuthorEdit
        {
            get
            {
                if ((this.mUITxtAddAuthorEdit == null))
                {
                    this.mUITxtAddAuthorEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITxtAddAuthorEdit.WindowTitles.Add("Authors");
                    #endregion
                }
                return this.mUITxtAddAuthorEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtAddAuthorEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIAddWindow : WinWindow
    {
        
        public UIAddWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Authors");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIAddButton.SearchProperties[WinButton.PropertyNames.Name] = "Add";
                    this.mUIAddButton.WindowTitles.Add("Authors");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIDataGridView1Window1 : WinWindow
    {
        
        public UIDataGridView1Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dataGridView1";
            this.WindowTitles.Add("Authors");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable1 UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable1(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable1 mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIDataGridViewTable1 : WinTable
    {
        
        public UIDataGridViewTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("Authors");
            #endregion
        }
        
        #region Properties
        public UIСтрока0Row1 UIСтрока0Row
        {
            get
            {
                if ((this.mUIСтрока0Row == null))
                {
                    this.mUIСтрока0Row = new UIСтрока0Row1(this);
                }
                return this.mUIСтрока0Row;
            }
        }
        #endregion
        
        #region Fields
        private UIСтрока0Row1 mUIСтрока0Row;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIСтрока0Row1 : WinRow
    {
        
        public UIСтрока0Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinRow.PropertyNames.Value] = "Stanislaw Lem;06518b91-66ba-4818-b6e3-f0d82a4fe982";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Authors");
            #endregion
        }
        
        #region Properties
        public WinCell UIStanislawLemCell
        {
            get
            {
                if ((this.mUIStanislawLemCell == null))
                {
                    this.mUIStanislawLemCell = new WinCell(this);
                    #region Условия поиска
                    this.mUIStanislawLemCell.SearchProperties[WinCell.PropertyNames.Value] = "Stanislaw Lem";
                    this.mUIStanislawLemCell.WindowTitles.Add("Authors");
                    #endregion
                }
                return this.mUIStanislawLemCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIStanislawLemCell;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIAuthorsTitleBar : WinTitleBar
    {
        
        public UIAuthorsTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Authors");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("Authors");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIAddnewbookWindow : WinWindow
    {
        
        public UIAddnewbookWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Add new book";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Add new book");
            #endregion
        }
        
        #region Properties
        public UITxtNameWindow1 UITxtNameWindow
        {
            get
            {
                if ((this.mUITxtNameWindow == null))
                {
                    this.mUITxtNameWindow = new UITxtNameWindow1(this);
                }
                return this.mUITxtNameWindow;
            }
        }
        
        public UICmbAuthorWindow UICmbAuthorWindow
        {
            get
            {
                if ((this.mUICmbAuthorWindow == null))
                {
                    this.mUICmbAuthorWindow = new UICmbAuthorWindow(this);
                }
                return this.mUICmbAuthorWindow;
            }
        }
        
        public UITxtYearWindow UITxtYearWindow
        {
            get
            {
                if ((this.mUITxtYearWindow == null))
                {
                    this.mUITxtYearWindow = new UITxtYearWindow(this);
                }
                return this.mUITxtYearWindow;
            }
        }
        
        public UICmbTypeWindow UICmbTypeWindow
        {
            get
            {
                if ((this.mUICmbTypeWindow == null))
                {
                    this.mUICmbTypeWindow = new UICmbTypeWindow(this);
                }
                return this.mUICmbTypeWindow;
            }
        }
        
        public UIAddBookWindow UIAddBookWindow
        {
            get
            {
                if ((this.mUIAddBookWindow == null))
                {
                    this.mUIAddBookWindow = new UIAddBookWindow(this);
                }
                return this.mUIAddBookWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITxtNameWindow1 mUITxtNameWindow;
        
        private UICmbAuthorWindow mUICmbAuthorWindow;
        
        private UITxtYearWindow mUITxtYearWindow;
        
        private UICmbTypeWindow mUICmbTypeWindow;
        
        private UIAddBookWindow mUIAddBookWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITxtNameWindow1 : WinWindow
    {
        
        public UITxtNameWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtName";
            this.WindowTitles.Add("Add new book");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtNameEdit
        {
            get
            {
                if ((this.mUITxtNameEdit == null))
                {
                    this.mUITxtNameEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITxtNameEdit.WindowTitles.Add("Add new book");
                    #endregion
                }
                return this.mUITxtNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtNameEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UICmbAuthorWindow : WinWindow
    {
        
        public UICmbAuthorWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbAuthor";
            this.WindowTitles.Add("Add new book");
            #endregion
        }
        
        #region Properties
        public WinComboBox UICmbAuthorComboBox
        {
            get
            {
                if ((this.mUICmbAuthorComboBox == null))
                {
                    this.mUICmbAuthorComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUICmbAuthorComboBox.WindowTitles.Add("Add new book");
                    #endregion
                }
                return this.mUICmbAuthorComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUICmbAuthorComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITxtYearWindow : WinWindow
    {
        
        public UITxtYearWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtYear";
            this.WindowTitles.Add("Add new book");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtYearEdit
        {
            get
            {
                if ((this.mUITxtYearEdit == null))
                {
                    this.mUITxtYearEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITxtYearEdit.WindowTitles.Add("Add new book");
                    #endregion
                }
                return this.mUITxtYearEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtYearEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UICmbTypeWindow : WinWindow
    {
        
        public UICmbTypeWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmbType";
            this.WindowTitles.Add("Add new book");
            #endregion
        }
        
        #region Properties
        public WinComboBox UICmbTypeComboBox
        {
            get
            {
                if ((this.mUICmbTypeComboBox == null))
                {
                    this.mUICmbTypeComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUICmbTypeComboBox.WindowTitles.Add("Add new book");
                    #endregion
                }
                return this.mUICmbTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUICmbTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIAddBookWindow : WinWindow
    {
        
        public UIAddBookWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnAddBook";
            this.WindowTitles.Add("Add new book");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddBookButton
        {
            get
            {
                if ((this.mUIAddBookButton == null))
                {
                    this.mUIAddBookButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIAddBookButton.SearchProperties[WinButton.PropertyNames.Name] = "Add Book";
                    this.mUIAddBookButton.WindowTitles.Add("Add new book");
                    #endregion
                }
                return this.mUIAddBookButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddBookButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIUsersWindow : WinWindow
    {
        
        public UIUsersWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Users";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Users");
            #endregion
        }
        
        #region Properties
        public UICreateUserWindow UICreateUserWindow
        {
            get
            {
                if ((this.mUICreateUserWindow == null))
                {
                    this.mUICreateUserWindow = new UICreateUserWindow(this);
                }
                return this.mUICreateUserWindow;
            }
        }
        
        public UIDataGridView1Window2 UIDataGridView1Window
        {
            get
            {
                if ((this.mUIDataGridView1Window == null))
                {
                    this.mUIDataGridView1Window = new UIDataGridView1Window2(this);
                }
                return this.mUIDataGridView1Window;
            }
        }
        #endregion
        
        #region Fields
        private UICreateUserWindow mUICreateUserWindow;
        
        private UIDataGridView1Window2 mUIDataGridView1Window;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UICreateUserWindow : WinWindow
    {
        
        public UICreateUserWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnCreateUser";
            this.WindowTitles.Add("Users");
            #endregion
        }
        
        #region Properties
        public WinButton UICreateUserButton
        {
            get
            {
                if ((this.mUICreateUserButton == null))
                {
                    this.mUICreateUserButton = new WinButton(this);
                    #region Условия поиска
                    this.mUICreateUserButton.SearchProperties[WinButton.PropertyNames.Name] = "Create User";
                    this.mUICreateUserButton.WindowTitles.Add("Users");
                    #endregion
                }
                return this.mUICreateUserButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICreateUserButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIDataGridView1Window2 : WinWindow
    {
        
        public UIDataGridView1Window2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dataGridView1";
            this.WindowTitles.Add("Users");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable2 UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable2(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable2 mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIDataGridViewTable2 : WinTable
    {
        
        public UIDataGridViewTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("Users");
            #endregion
        }
        
        #region Properties
        public UIСтрока4Row UIСтрока4Row
        {
            get
            {
                if ((this.mUIСтрока4Row == null))
                {
                    this.mUIСтрока4Row = new UIСтрока4Row(this);
                }
                return this.mUIСтрока4Row;
            }
        }
        #endregion
        
        #region Fields
        private UIСтрока4Row mUIСтрока4Row;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIСтрока4Row : WinRow
    {
        
        public UIСтрока4Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinRow.PropertyNames.Value] = "Reader2;test3@mail.ru;(не определено);True";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Users");
            #endregion
        }
        
        #region Properties
        public WinCell UIReader2Cell
        {
            get
            {
                if ((this.mUIReader2Cell == null))
                {
                    this.mUIReader2Cell = new WinCell(this);
                    #region Условия поиска
                    this.mUIReader2Cell.SearchProperties[WinCell.PropertyNames.Value] = "Reader2";
                    this.mUIReader2Cell.WindowTitles.Add("Users");
                    #endregion
                }
                return this.mUIReader2Cell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIReader2Cell;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIAddUserWindow : WinWindow
    {
        
        public UIAddUserWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Add User";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Add User");
            #endregion
        }
        
        #region Properties
        public UITxtUserNameWindow UITxtUserNameWindow
        {
            get
            {
                if ((this.mUITxtUserNameWindow == null))
                {
                    this.mUITxtUserNameWindow = new UITxtUserNameWindow(this);
                }
                return this.mUITxtUserNameWindow;
            }
        }
        
        public UITextUserPassWindow UITextUserPassWindow
        {
            get
            {
                if ((this.mUITextUserPassWindow == null))
                {
                    this.mUITextUserPassWindow = new UITextUserPassWindow(this);
                }
                return this.mUITextUserPassWindow;
            }
        }
        
        public UITextUserMailWindow UITextUserMailWindow
        {
            get
            {
                if ((this.mUITextUserMailWindow == null))
                {
                    this.mUITextUserMailWindow = new UITextUserMailWindow(this);
                }
                return this.mUITextUserMailWindow;
            }
        }
        
        public UICreateUserWindow1 UICreateUserWindow
        {
            get
            {
                if ((this.mUICreateUserWindow == null))
                {
                    this.mUICreateUserWindow = new UICreateUserWindow1(this);
                }
                return this.mUICreateUserWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITxtUserNameWindow mUITxtUserNameWindow;
        
        private UITextUserPassWindow mUITextUserPassWindow;
        
        private UITextUserMailWindow mUITextUserMailWindow;
        
        private UICreateUserWindow1 mUICreateUserWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITxtUserNameWindow : WinWindow
    {
        
        public UITxtUserNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtUserName";
            this.WindowTitles.Add("Add User");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtUserNameEdit
        {
            get
            {
                if ((this.mUITxtUserNameEdit == null))
                {
                    this.mUITxtUserNameEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITxtUserNameEdit.WindowTitles.Add("Add User");
                    #endregion
                }
                return this.mUITxtUserNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtUserNameEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITextUserPassWindow : WinWindow
    {
        
        public UITextUserPassWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textUserPass";
            this.WindowTitles.Add("Add User");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextUserPassEdit
        {
            get
            {
                if ((this.mUITextUserPassEdit == null))
                {
                    this.mUITextUserPassEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextUserPassEdit.WindowTitles.Add("Add User");
                    #endregion
                }
                return this.mUITextUserPassEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextUserPassEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UITextUserMailWindow : WinWindow
    {
        
        public UITextUserMailWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textUserMail";
            this.WindowTitles.Add("Add User");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextUserMailEdit
        {
            get
            {
                if ((this.mUITextUserMailEdit == null))
                {
                    this.mUITextUserMailEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextUserMailEdit.WindowTitles.Add("Add User");
                    #endregion
                }
                return this.mUITextUserMailEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextUserMailEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UICreateUserWindow1 : WinWindow
    {
        
        public UICreateUserWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Add User");
            #endregion
        }
        
        #region Properties
        public WinButton UICreateUserButton
        {
            get
            {
                if ((this.mUICreateUserButton == null))
                {
                    this.mUICreateUserButton = new WinButton(this);
                    #region Условия поиска
                    this.mUICreateUserButton.SearchProperties[WinButton.PropertyNames.Name] = "Create User";
                    this.mUICreateUserButton.WindowTitles.Add("Add User");
                    #endregion
                }
                return this.mUICreateUserButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICreateUserButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIProgramManagerWindow : WinWindow
    {
        
        public UIProgramManagerWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Program Manager";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Progman";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public UIРабочийстолList UIРабочийстолList
        {
            get
            {
                if ((this.mUIРабочийстолList == null))
                {
                    this.mUIРабочийстолList = new UIРабочийстолList(this);
                }
                return this.mUIРабочийстолList;
            }
        }
        #endregion
        
        #region Fields
        private UIРабочийстолList mUIРабочийстолList;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIРабочийстолList : WinList
    {
        
        public UIРабочийстолList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinList.PropertyNames.Name] = "Рабочий стол";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public WinListItem UISandboxListItem
        {
            get
            {
                if ((this.mUISandboxListItem == null))
                {
                    this.mUISandboxListItem = new WinListItem(this);
                    #region Условия поиска
                    this.mUISandboxListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Sandbox";
                    this.mUISandboxListItem.WindowTitles.Add("Program Manager");
                    #endregion
                }
                return this.mUISandboxListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUISandboxListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UISanbox_SetupWindow : WinWindow
    {
        
        public UISanbox_SetupWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Sanbox_Setup";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Sanbox_Setup");
            #endregion
        }
        
        #region Properties
        public UIFolderViewWindow UIFolderViewWindow
        {
            get
            {
                if ((this.mUIFolderViewWindow == null))
                {
                    this.mUIFolderViewWindow = new UIFolderViewWindow(this);
                }
                return this.mUIFolderViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIFolderViewWindow mUIFolderViewWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "10.0.30319.1")]
    public class UIFolderViewWindow : WinWindow
    {
        
        public UIFolderViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Sanbox_Setup");
            #endregion
        }
        
        #region Properties
        public WinListItem UISANDBOXexeListItem
        {
            get
            {
                if ((this.mUISANDBOXexeListItem == null))
                {
                    this.mUISANDBOXexeListItem = new WinListItem(this);
                    #region Условия поиска
                    this.mUISANDBOXexeListItem.SearchProperties[WinListItem.PropertyNames.Name] = "SANDBOX.exe";
                    this.mUISANDBOXexeListItem.WindowTitles.Add("Sanbox_Setup");
                    #endregion
                }
                return this.mUISANDBOXexeListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUISANDBOXexeListItem;
        #endregion
    }
}
